<%#
stylesheets
config
type
cipherKeyStorageId
%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=Edge"/>
        <script src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.3.2/require.min.js"></script>
<% stylesheets.forEach(function(url) { -%>
        <link href="<%= url %>" rel="stylesheet">
<% }); -%>
    </head>
    <body>
        <script>
            var config = <%- JSON.stringify(config) %>;
            config.config = {text: {useXhr: function(url, protocol, hostname, port) {
                return true; // force use of CORS for text dependencies
            }}};
            require.config(config);

            var params = (function(uri) {
                    var a = document.createElement('a');
                    a.href = uri;
                    return a.search.replace(/^\?/, '').split('&').reduce(function(obj, pair) {
                        var tokens = pair.split('=');
                        obj[tokens[0]] = decodeURIComponent(tokens[1]);
                        return obj;
                    }, {});
                })(window.location.href);
            var layout = params.layout;
            var data = params.data;

            require(['renderer'], function(renderer) {
                var parse = function(str, cb) {
<% if (type == 'object-tree' || type == 'tabs') { %>
                        cb(JSON.parse(str));
<% } else if (type == 'table') { %>
                        var rows = str.trim().split('\n').map(function(row) {
                                return row.split(',').map(function(value) {
                                    return value.trim();
                                });
                            });
                        // First row is considered header
                        cb({
                            cols: rows.shift().map(function(value) { return {label: value}; }),
                            rows: rows
                        });
<% } else if (type == 'text') { %>
                        cb(str);
<% } %>

                    };

                    require(['datasource', 'crypto', 'on-demand'], function(datasource, crypto, OnDemand) {
                        var cipherKey = OnDemand(sessionStorage, '<%- cipherKeyStorageId %>');
    
                        datasource(data).then(function(str) {
                            parse(crypto.decipher(cipherKey(), str), function(data) {
                                renderer.update(data);
                            });
                        });
                    });
                });
        </script>
    </body>
</html>
